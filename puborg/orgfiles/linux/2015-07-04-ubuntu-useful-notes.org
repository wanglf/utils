#+TITLE: Ubuntu实用技巧
#+AUTHOR: Micky Ching
#+OPTIONS: H:4 ^:nil
#+LATEX_CLASS: latex-doc
#+PAGE_TAGS: linux ubuntu

* 实用技巧
** 系统配置
*** 软件源配置
#+HTML: <!--abstract-begin-->
国内用163的源比较快，编辑 =/etc/apt/sources.list= 写入如下内容。
#+BEGIN_SRC sh
# 14.04
deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse
#+END_SRC
#+HTML: <!--abstract-end-->

#+BEGIN_SRC sh
# 12.04
deb http://mirrors.163.com/ubuntu/ precise main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ precise-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ precise-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ precise-proposed main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ precise main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ precise-security main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ precise-updates main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ precise-proposed main restricted universe multiverse
#+END_SRC

*** locale和输入法
中文locale需要添加 =zh_CN.UTF-8= 支持，否则在Emacs上输入中文会不显示。
#+BEGIN_SRC sh
sudo locale-gen zh_CN.UTF-8
#+END_SRC

ref:
- http://www.linuxidc.com/Linux/2014-02/96171.htm

由于我要用emacs，而ibus在emacs上有bug，至今没有人去解决。
所以不得不使用fcitx。

首先卸载ibus及相关配置。
#+BEGIN_SRC sh
killall ibus-daemon
sudo apt-get purge ibus ibus-gtk ibus-gtk3 ibus-pinyin* \
     ibus-sunpinyin ibus-table python-ibus
sudo apt-get autoremove indicator-keyboard
rm -rf ~/.config/ibus
#+END_SRC

安装fcitx输入法，安装完成之后需要重新登录并设定输入法。
#+BEGIN_SRC sh
sudo add-apt-repository ppa:fcitx-team/nightly
sudo apt-get update
sudo apt-get install fcitx-pinyin
sudo apt-get install fcitx-sogoupinyin
#+END_SRC

*** 给nautilus添加在当前目录打开终端选项
#+BEGIN_SRC sh
sudo apt-get install nautilus-open-terminal
#+END_SRC

*** 安装chrome flash插件
Chromium谷歌的开源浏览器将不再支持Netscape浏览器插件API，Adobe公司的Flash将无法
正常工作了。然而用户可以使用Pepper Flash Player，这是谷歌浏览器上一款替代Adobe
Flash的插件。
#+BEGIN_SRC sh
sudo apt-get install chromium-browser pepperflashplugin-nonfree
sudo update-pepperflashplugin-nonfree --install
#+END_SRC
如果是ubuntu早期版本，需添加源：
#+BEGIN_SRC sh
sudo add-apt-repository ppa:skunk/pepper-flash
sudo apt-get update
sudo apt-get install pepflashplugin-installer
sudo update-pepperflashplugin-nonfree --install
#+END_SRC

*** 安装jekyll
ref:
- http://blog.csdn.net/cschengvdn/article/details/42425271
- http://www.linuxidc.com/Linux/2014-09/106771.htm

在Ubuntu上如果用 =apt-get= 安装会无法使用jekyll，所以不得不用gem安装。
但是用gem又需要修改源：
#+BEGIN_SRC sh
gem sources -l                          # 查看源列表
gem sources --remove https://rubygems.org/
gem sources -a http://ruby.taobao.org/
#+END_SRC

然后利用gem安装：
#+BEGIN_SRC sh
sudo gem install jekyll
sudo gem install therubyracer
#+END_SRC

*** 安装最新latex
#+BEGIN_SRC sh
wget https://github.com/scottkosty/install-tl-ubuntu/raw/master/install-tl-ubuntu && chmod +x ./install-tl-ubuntu
./install-tl-ubuntu --help
#+END_SRC

*** 配置NFS远程文件系统
服务端安装NFS服务端工具。
#+BEGIN_SRC sh
sudo apt-get install nfs-kernel-server
#+END_SRC

编辑 =/etc/exports= 配置NFS服务选项，添加如下一行。
#+BEGIN_SRC sh
/home/micky/share/nfs  *(ro,sync,no_root_squash)
#+END_SRC

使用root权限启动NFS服务。
#+BEGIN_SRC sh
service nfs-kernel-server restart
#+END_SRC

客户端只需要挂载即可使用。
#+BEGIN_SRC sh
mount -t nfs -o proto=tcp,port=2049,nolock 192.168.1.67:/home/micky/share/nfs /mnt/
#+END_SRC

*** 自动挂载USB设备
创建文件 =/etc/udev/rules.d/87-usb-automount.rules=

#+BEGIN_SRC sh
KERNEL!="sd[a-z][0-9]", GOTO="exit_automount"
# Import FS info
IMPORT{program}="/sbin/blkid -o udev -p %N"
# Get a label if present, otherwise specify one
ENV{ID_FS_LABEL}!="", ENV{dir_name}="%E{ID_FS_LABEL}"
ENV{ID_FS_LABEL}=="", ENV{dir_name}="Disk-%k"
# Global mount options
ACTION=="add", ENV{mount_options}="relatime"
# Filesystem-specific mount options
ACTION=="add", ENV{ID_FS_TYPE}=="vfat|ntfs", ENV{mount_options}="$env{mount_options},utf8,gid=100,umask=002"
# Mount the device
ACTION=="add", RUN+="/bin/mkdir -p /media/%E{dir_name}", RUN+="/bin/mount -o $env{mount_options} /dev/%k /media/%E{dir_name}"
# Clean up after removal
ACTION=="remove", ENV{dir_name}!="", RUN+="/bin/umount /dev/%k"
ACTION=="remove", ENV{dir_name}!="", RUN+="/bin/umount -l /media/%E{dir_name}", RUN+="/bin/rmdir /media/%E{dir_name}"
# Exit
LABEL="exit_automount"
#+END_SRC

更新配置：
#+BEGIN_SRC sh
udevadm control --reload-rules
#+END_SRC
** 启动管理
*** 通过USB Live CD安装grub
#+BEGIN_SRC sh
sudo mount /dev/sda5 /mnt
sudo mount --bind /dev /mnt/dev
sudo mount --bind /sys /mnt/sys
sudo mount --bind /proc /mnt/proc
sudo mount /dev/sdaX /mnt/boot          # only if you separate boot partition
sudo chroot /mnt
sudo grub-install --root-directory=/mnt /dev/sda
#+END_SRC
*** 处理隐藏GRUB
如果执行更新grub动作的时候能看到如下提示信息，则说明GRUB被隐藏了，
启动的时候也看不到选择界面。
#+BEGIN_SRC sh
sudo update-grub2
#+END_SRC

#+BEGIN_QUOTE
Generating grub configuration file ...
Warning: Setting GRUB_TIMEOUT to a non-zero value
when GRUB_HIDDEN_TIMEOUT is set is no longer supported.
#+END_QUOTE

处理办法是编辑 =/etc/default/grub= 注释掉 =GRUB_HIDDEN_TIMEOUT= 行。

*** 通过GRUB rescue修复grub
#+BEGIN_SRC sh
grub> set pager=1

grub> ls
(hd0) (hd0,msdos2) (hd0,msdos1)

grub> ls (hd0,1)/
lost+found/ bin/ boot/ cdrom/ dev/ etc/ home/  lib/
lib64/ media/ mnt/ opt/ proc/ root/ run/ sbin/
srv/ sys/ tmp/ usr/ var/ vmlinuz vmlinuz.old
initrd.img initrd.img.old

grub> cat (hd0,1)/etc/issue
Ubuntu 14.04 LTS \n \l

grub> set root=(hd0,1)
grub> linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1
grub> initrd /boot/initrd.img-3.13.0-29-generic
grub> boot

# 有些Linux系统已经有了超链接，可以采用更简单的写法
grub> set root=(hd0,1)
grub> linux /vmlinuz root=/dev/sda1
grub> initrd /initrd.img
grub> boot
#+END_SRC

如果GRUB rescue shell和通常的不一样，可以载入模块normal.mod和linux.mod。
#+BEGIN_SRC sh
grub rescue> set prefix=(hd0,1)/boot/grub
grub rescue> set root=(hd0,1)
grub rescue> insmod normal
grub rescue> normal
grub rescue> insmod linux
grub rescue> linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1
grub rescue> initrd /boot/initrd.img-3.13.0-29-generic
grub rescue> boot
#+END_SRC

最好在启动之后永久性的修复一下。
#+BEGIN_SRC sh
# update-grub
Generating grub configuration file ...
Found background: /usr/share/images/grub/Apollo_17_The_Last_Moon_Shot_Edit1.tga
Found background image: /usr/share/images/grub/Apollo_17_The_Last_Moon_Shot_Edit1.tga
Found linux image: /boot/vmlinuz-3.13.0-29-generic
Found initrd image: /boot/initrd.img-3.13.0-29-generic
Found linux image: /boot/vmlinuz-3.13.0-27-generic
Found initrd image: /boot/initrd.img-3.13.0-27-generic
Found linux image: /boot/vmlinuz-3.13.0-24-generic
Found initrd image: /boot/initrd.img-3.13.0-24-generic
Found memtest86+ image: /boot/memtest86+.elf
Found memtest86+ image: /boot/memtest86+.bin
done
# grub-install /dev/sda
Installing for i386-pc platform.
Installation finished. No error reported.
#+END_SRC

*** 更新initramfs
有时候删除内核模块之后，重启还是能看到已删除的模块载入到系统。
这有很大的可能性是从initramfs中载入的，此时可以更新initramfs，
使用如下命令。
#+BEGIN_SRC sh
update-initramfs -c -k 2.6.18-1-686
#+END_SRC
- -c :: 表示新创建一个initramfs
- -k :: 指定内核版本，可以用 =uname -r= 获取

* 参考资料
1. [[http://askubuntu.com/questions/145241/how-do-i-run-update-grub-from-a-livecd][How do I run update-grub from a LiveCD]]
2. [[http://howtoubuntu.org/how-to-repair-restore-reinstall-grub-2-with-a-ubuntu-live-cd][How to Repair, Restore, or Reinstall Grub 2 with a Ubuntu Live CD or USB]]
3. [[https://www.linux.com/learn/tutorials/776643-how-to-rescue-a-non-booting-grub-2-on-linux/][How to Rescue a Non-booting GRUB 2 on Linux]]
